
package com.euromsg.ws.auth;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Auth", targetNamespace = "http://ws.euromsg.com/auth", wsdlLocation = "META-INF/wsdl/Auth.wsdl")
public class Auth
    extends Service
{

    private final static URL AUTH_WSDL_LOCATION;
    private final static WebServiceException AUTH_EXCEPTION;
    private final static QName AUTH_QNAME = new QName("http://ws.euromsg.com/auth", "Auth");

    static {
        AUTH_WSDL_LOCATION = com.euromsg.ws.auth.Auth.class.getClassLoader().getResource("META-INF/wsdl/Auth.wsdl");
        WebServiceException e = null;
        if (AUTH_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find 'META-INF/wsdl/Auth.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        AUTH_EXCEPTION = e;
    }

    public Auth() {
        super(__getWsdlLocation(), AUTH_QNAME);
    }

    public Auth(WebServiceFeature... features) {
        super(__getWsdlLocation(), AUTH_QNAME, features);
    }

    public Auth(URL wsdlLocation) {
        super(wsdlLocation, AUTH_QNAME);
    }

    public Auth(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, AUTH_QNAME, features);
    }

    public Auth(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Auth(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns AuthSoap
     */
    @WebEndpoint(name = "AuthSoap")
    public AuthSoap getAuthSoap() {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthSoap"), AuthSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthSoap
     */
    @WebEndpoint(name = "AuthSoap")
    public AuthSoap getAuthSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthSoap"), AuthSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns AuthSoap
     */
    @WebEndpoint(name = "AuthSoap12")
    public AuthSoap getAuthSoap12() {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthSoap12"), AuthSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthSoap
     */
    @WebEndpoint(name = "AuthSoap12")
    public AuthSoap getAuthSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthSoap12"), AuthSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns AuthHttpGet
     */
    @WebEndpoint(name = "AuthHttpGet")
    public AuthHttpGet getAuthHttpGet() {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthHttpGet"), AuthHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthHttpGet
     */
    @WebEndpoint(name = "AuthHttpGet")
    public AuthHttpGet getAuthHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthHttpGet"), AuthHttpGet.class, features);
    }

    /**
     * 
     * @return
     *     returns AuthHttpPost
     */
    @WebEndpoint(name = "AuthHttpPost")
    public AuthHttpPost getAuthHttpPost() {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthHttpPost"), AuthHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AuthHttpPost
     */
    @WebEndpoint(name = "AuthHttpPost")
    public AuthHttpPost getAuthHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.euromsg.com/auth", "AuthHttpPost"), AuthHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (AUTH_EXCEPTION!= null) {
            throw AUTH_EXCEPTION;
        }
        return AUTH_WSDL_LOCATION;
    }

}
